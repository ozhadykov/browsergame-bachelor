@startuml

class Index_html {
  - width: int
  - height: int
  - mycanvas: canvas
}



package "classes" #DDDDDD{

  class game {
    - levels: int[]
    - current_level: int 
    + start()
    + update()
    + end()
    + pause()
    + updateFrames()
    + tick()
  
  }
  
  
  class player {
    - keydown_left: boolean
    - keydown_right: boolean
    - keydown_jump: boolean
    - Eventlistener_left
    - Eventlistener_right
    - Eventlistener_jump
    - canJump: boolean
    - inJump: boolean
    - lastPressedRight: boolean
    - velocity
    - startedPressingJump()
    - stoppedPressingJump()
    + applyGravity()
    + action()
    + checlForCollision(ctx, canvas)
    + draw(ctx, canvas)
  }
  
  class elementList {
    + add(element)
    + get(element)
    + delete(element)
    + draw(ctx, canvas)
    + action()
  }
  
  class element {
    - positionX: int 
    - positionY: int 
    - width: int
    - height: int
    + draw(ctx, r, g, b, a, x, y, width, height)
    + action()
  }
  
  class platform {
  - width: int
  - height: int
  + update()
  + draw(ctx)
  }
  
  
game --> elementList
elementList --> element
player -|>element
platform -|> element
}

class main_js {
  -Game
  -myGame
  -mainMenu
  -myGame.start() 
  -goToMainMenu()
}

package "data" #DDDDDD{
  
  class levels {
  + level
  }
}

package "utils" #DDDDDD{

  class PlatformElementGenerator{
  - generatePlatformsForLevel()
  }
}

Index_html --> main_js
main_js --> classes
classes --> data
classes --> utils
@enduml